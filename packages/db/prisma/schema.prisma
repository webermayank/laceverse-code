// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model User {
  id       String  @id @unique @default(cuid())
  username String  @unique
  password String
  avatarId String
  role     Role
  spaces Space[]
  avatar Avatar? @relation(fields: [avatarId], references: [id])
}

model spaceElements {
  id        String @id @unique @default(cuid())
  elementId String
  spaceId   String
  x         Int
  y         Int
  space Space @relation(fields: [spaceId], references: [id])
  element Element @relation(fields: [elementId], references:[id])
}

model mapElements {
  id        String  @id @unique @default(cuid())
  mapId     String
  elementId String
  x         Int?
  y         Int?
  map Map @relation(fields: [mapId], references: [id])
  element Element @relation(fields: [elementId], references: [id])

}

model Element {
  id       String @id @unique @default(cuid())
  width    Int
  height   Int
  imageurl String
  static  Boolean
  spaces spaceElements[]
  mapElements mapElements[]
}

model Space {
  id        String  @id @unique @default(cuid())
  name      String
  width     Int
  height    Int
  thumbnail String?
  creatorId String   //this willbe the forigen key to the user table 
  creator   User  @relation(fields: [creatorId], references: [id])
  elements  spaceElements[]
}

model Map {
  id     String  @id @unique @default(cuid())
  name   String
  width  Int
  height Int
  thumbnail String
  mapElements mapElements[]
}

model Avatar {
  id       String  @id @unique @default(cuid())
  imageurl String?
  name     String?
  users    User[]
}

enum Role {
  Admin
  User
}